"""
Django settings for codora_backend project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from urllib.parse import urlparse
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
env_path = BASE_DIR / '.env'
load_dotenv(env_path)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&y81-4+g*#qxjz^2e)ispeo$78wu$r7ysqg!w!4uc6vk-q5)ez'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

ASGI_APPLICATION = "codora_backend.asgi.application"
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    "channels",
    "core",
]
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer"  # For local dev
    },
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'codora_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'codora_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User model
AUTH_USER_MODEL = 'core.User'

# Session settings
SESSION_COOKIE_AGE = 86400 * 30  # 30 days
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_HTTPONLY = True
# Default SameSite for cookies. For cross-site (frontend on different origin) you must set
# SESSION_COOKIE_SAMESITE = None and SESSION_COOKIE_SECURE = True in production (HTTPS).
SESSION_COOKIE_SAMESITE = 'Lax'

ALLOWED_HOSTS = ["*"]

# CORS settings for local development
CORS_ALLOW_ALL_ORIGINS = True  # For development only; overridden below if FRONTEND_ORIGIN is set
CORS_ALLOW_CREDENTIALS = True

# Developer-friendly defaults (local dev)
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
    "http://127.0.0.1:8000",
    "http://localhost:8000",
]

CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
    "http://127.0.0.1:8000",
    "http://localhost:8000",
]

# Optionally set FRONTEND_ORIGIN in environment for deployed frontends (example: https://codora-eight.vercel.app)
_raw_frontend_origin = os.getenv('FRONTEND_ORIGIN')
# Normalize frontend origin: ensure it includes a scheme (required by Django settings)
FRONTEND_ORIGIN = None
if _raw_frontend_origin:
    parsed = urlparse(_raw_frontend_origin)
    if not parsed.scheme:
        # Default to https if scheme missing (most deployed frontends use HTTPS)
        normalized = f"https://{_raw_frontend_origin.rstrip('/')}"
    else:
        normalized = _raw_frontend_origin.rstrip('/')

    FRONTEND_ORIGIN = normalized

if FRONTEND_ORIGIN:
    # In production, do not use wildcard origins when credentials are required.
    CORS_ALLOW_ALL_ORIGINS = False
    # Ensure credentials are allowed and the frontend origin is permitted
    CORS_ALLOW_CREDENTIALS = True
    # Add the frontend origin to allowed origins and CSRF trusted origins
    if FRONTEND_ORIGIN not in CORS_ALLOWED_ORIGINS:
        CORS_ALLOWED_ORIGINS.append(FRONTEND_ORIGIN)
    if FRONTEND_ORIGIN not in CSRF_TRUSTED_ORIGINS:
        CSRF_TRUSTED_ORIGINS.append(FRONTEND_ORIGIN)

    # For cross-site cookies to be accepted, cookies must be marked SameSite=None and Secure.
    # Only enable these settings when DEBUG is False (production) to avoid local dev HTTPS issues.
    if not DEBUG:
        SESSION_COOKIE_SAMESITE = None
        SESSION_COOKIE_SECURE = True
        CSRF_COOKIE_SECURE = True
        # Optionally set SESSION_COOKIE_DOMAIN if you need to scope cookies to a particular domain.
        # SESSION_COOKIE_DOMAIN = '.your-domain.com'
