{
  "id": "20251015215349451425",
  "room": "749282",
  "message": "Code Room: 749282",
  "author": "Vinayak",
  "timestamp": "2025-10-15T21:53:49.451425+00:00",
  "content": "import tkinter as tk\n\n# Initialize main window\nroot = tk.Tk()\nroot.title(\"Calculator\")\nroot.geometry(\"300x400\")\n\n# Create display area\ndisplay = tk.Label(root, text=\"0\", anchor=\"e\", font=(\"Arial\", 20), padx=10, pady=10)\ndisplay.pack(fill=\"x\")\n\n# Variables to track calculations\ncurrent_input = \"\"\nstored_number = 0\ncurrent_operation = None\n\ndef button_click(value):\n    \"\"\"Handle button click events\"\"\"\n    global current_input, stored_number, current_operation\n    \n    if value == \"=\":\n        calculate()\n    elif value == \"C\":\n        clear()\n    elif value in [\"+\", \"-\", \"*\", \"/\"]:\n        store_operation(value)\n    else:\n        current_input += value\n        update_display()\n\ndef store_operation(op):\n    \"\"\"Store the current number and selected operation\"\"\"\n    global current_input, stored_number, current_operation\n    \n    try:\n        stored_number = float(current_input)\n        current_operation = op\n        current_input = \"\"\n    except ValueError:\n        clear()\n\ndef calculate():\n    \"\"\"Perform the stored operation\"\"\"\n    global current_input, stored_number, current_operation\n    \n    if current_operation and current_input:\n        try:\n            num2 = float(current_input)\n            if current_operation == \"+\":\n                result = stored_number + num2\n            elif current_operation == \"-\":\n                result = stored_number - num2\n            elif current_operation == \"*\":\n                result = stored_number * num2\n            elif current_operation == \"/\":\n                if num2 == 0:\n                    show_error(\"Division by zero!\")\n                    return\n                result = stored_number / num2\n            \n            current_input = str(result)\n            stored_number = 0\n            current_operation = None\n        except Exception as e:\n            show_error(f\"Error: {e}\")\n            return\n    update_display()\n\ndef clear():\n    \"\"\"Reset all calculation state\"\"\"\n    global current_input, stored_number, current_operation\n    current_input = \"0\"\n    stored_number = 0\n    current_operation = None\n    update_display()\n\ndef update_display():\n    \"\"\"Update the display label with current input\"\"\"\n    display.config(text=current_input)\n\ndef show_error(message):\n    \"\"\"Display error message in the calculator\"\"\"\n    display.config(text=message, fg=\"red\")\n\n# Create button layout\nbuttons = [\n    ('7', 1, 0), ('8', 1, 1), ('9', 1, 2), ('+', 1, 3),\n    ('4', 2, 0), ('5', 2, 1), ('6', 2, 2), ('-', 2, 3),\n    ('1', 3, 0), ('2', 3, 1), ('3', 3, 2), ('*', 3, 3),\n    ('0', 4, 0), ('.', 4, 1), ('=', 4, 2), ('/', 4, 3),\n    ('C', 5, 0)\n]\n\nfor (text, row, col) in buttons:\n    btn = tk.Button(root, text=text, font=(\"Arial\", 14), \n                    command=lambda t=text: button_click(t))\n    btn.grid(row=row, column=col, padx=5, pady=5)\n\n# Start the main loop\nroot.mainloop()"
}